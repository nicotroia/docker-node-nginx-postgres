const pool = require('./index');

const USER_DATA = [
  { name: 'Ellen', role: 'admin' },
  { name: 'Sue', role: 'peasant' },
];

const seedTable = async (tableName, data) => {
  let poolClient;
  try {
    poolClient = await pool.connect();
  }
  catch (error) {
    console.log('mysql connection error', error);
    throw error;
  }

  try {
    await poolClient.query("DROP TABLE IF EXISTS " + tableName);

    let tableCreate = `CREATE TABLE ${tableName} (`
    tableCreate += "id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY";
    tableCreate += ", name VARCHAR(50) NOT NULL";
    tableCreate += ", role VARCHAR(50) NOT NULL";
    tableCreate += ")";

    await poolClient.query(tableCreate);
  }
  catch (error) {
    console.log('create table error', error);
    poolClient.release();
    throw error;
  }

  let insertQuery = `INSERT INTO ${tableName} (name, role) SELECT * FROM UNNEST ($1::text[], $2::text[])`;
  let insertValues = [[], []];
  
  for (let i = 0; i < data.length; i++) {
    const d = data[i];
    insertValues[0].push(d.name);
    insertValues[1].push(d.role);
  }

  try {
    await poolClient.query(insertQuery, insertValues);
  }
  catch (error) {
    console.log('insert data error', error);
    poolClient.release();
    throw error;
  }

  poolClient.release();
};

const seed = async (callback) => {
  try {
    await seedTable('users', USER_DATA);
    console.log('User data seeded!');
    callback();
  }
  catch (error) {
    console.log('Problem seeding User data', error);
    callback(true);
  }
};

module.exports = { seed };
